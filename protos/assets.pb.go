// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: assets.proto

package jstreams_server

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRuneIconRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatchVersion string `protobuf:"bytes,1,opt,name=patchVersion,proto3" json:"patchVersion,omitempty"`
	Style        int32  `protobuf:"varint,2,opt,name=style,proto3" json:"style,omitempty"`
}

func (x *GetRuneIconRequest) Reset() {
	*x = GetRuneIconRequest{}
	mi := &file_assets_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRuneIconRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuneIconRequest) ProtoMessage() {}

func (x *GetRuneIconRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assets_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuneIconRequest.ProtoReflect.Descriptor instead.
func (*GetRuneIconRequest) Descriptor() ([]byte, []int) {
	return file_assets_proto_rawDescGZIP(), []int{0}
}

func (x *GetRuneIconRequest) GetPatchVersion() string {
	if x != nil {
		return x.PatchVersion
	}
	return ""
}

func (x *GetRuneIconRequest) GetStyle() int32 {
	if x != nil {
		return x.Style
	}
	return 0
}

type GetRuneIconResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetRuneIconResponse) Reset() {
	*x = GetRuneIconResponse{}
	mi := &file_assets_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRuneIconResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuneIconResponse) ProtoMessage() {}

func (x *GetRuneIconResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assets_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuneIconResponse.ProtoReflect.Descriptor instead.
func (*GetRuneIconResponse) Descriptor() ([]byte, []int) {
	return file_assets_proto_rawDescGZIP(), []int{1}
}

func (x *GetRuneIconResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetSummonerSpellIconRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatchVersion string `protobuf:"bytes,1,opt,name=patchVersion,proto3" json:"patchVersion,omitempty"`
	Image        *Image `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *GetSummonerSpellIconRequest) Reset() {
	*x = GetSummonerSpellIconRequest{}
	mi := &file_assets_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSummonerSpellIconRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummonerSpellIconRequest) ProtoMessage() {}

func (x *GetSummonerSpellIconRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assets_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummonerSpellIconRequest.ProtoReflect.Descriptor instead.
func (*GetSummonerSpellIconRequest) Descriptor() ([]byte, []int) {
	return file_assets_proto_rawDescGZIP(), []int{2}
}

func (x *GetSummonerSpellIconRequest) GetPatchVersion() string {
	if x != nil {
		return x.PatchVersion
	}
	return ""
}

func (x *GetSummonerSpellIconRequest) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

type GetSummonerSpellIconResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetSummonerSpellIconResponse) Reset() {
	*x = GetSummonerSpellIconResponse{}
	mi := &file_assets_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSummonerSpellIconResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummonerSpellIconResponse) ProtoMessage() {}

func (x *GetSummonerSpellIconResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assets_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummonerSpellIconResponse.ProtoReflect.Descriptor instead.
func (*GetSummonerSpellIconResponse) Descriptor() ([]byte, []int) {
	return file_assets_proto_rawDescGZIP(), []int{3}
}

func (x *GetSummonerSpellIconResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetItemAssetUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemName     string `protobuf:"bytes,1,opt,name=itemName,proto3" json:"itemName,omitempty"`
	PatchVersion string `protobuf:"bytes,2,opt,name=patchVersion,proto3" json:"patchVersion,omitempty"`
}

func (x *GetItemAssetUrlRequest) Reset() {
	*x = GetItemAssetUrlRequest{}
	mi := &file_assets_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetItemAssetUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemAssetUrlRequest) ProtoMessage() {}

func (x *GetItemAssetUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assets_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemAssetUrlRequest.ProtoReflect.Descriptor instead.
func (*GetItemAssetUrlRequest) Descriptor() ([]byte, []int) {
	return file_assets_proto_rawDescGZIP(), []int{4}
}

func (x *GetItemAssetUrlRequest) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *GetItemAssetUrlRequest) GetPatchVersion() string {
	if x != nil {
		return x.PatchVersion
	}
	return ""
}

type GetItemAssetUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetItemAssetUrlResponse) Reset() {
	*x = GetItemAssetUrlResponse{}
	mi := &file_assets_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetItemAssetUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemAssetUrlResponse) ProtoMessage() {}

func (x *GetItemAssetUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assets_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemAssetUrlResponse.ProtoReflect.Descriptor instead.
func (*GetItemAssetUrlResponse) Descriptor() ([]byte, []int) {
	return file_assets_proto_rawDescGZIP(), []int{5}
}

func (x *GetItemAssetUrlResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetSpellAssetUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpellName    string `protobuf:"bytes,1,opt,name=spellName,proto3" json:"spellName,omitempty"`
	PatchVersion string `protobuf:"bytes,2,opt,name=patchVersion,proto3" json:"patchVersion,omitempty"`
}

func (x *GetSpellAssetUrlRequest) Reset() {
	*x = GetSpellAssetUrlRequest{}
	mi := &file_assets_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpellAssetUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpellAssetUrlRequest) ProtoMessage() {}

func (x *GetSpellAssetUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assets_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpellAssetUrlRequest.ProtoReflect.Descriptor instead.
func (*GetSpellAssetUrlRequest) Descriptor() ([]byte, []int) {
	return file_assets_proto_rawDescGZIP(), []int{6}
}

func (x *GetSpellAssetUrlRequest) GetSpellName() string {
	if x != nil {
		return x.SpellName
	}
	return ""
}

func (x *GetSpellAssetUrlRequest) GetPatchVersion() string {
	if x != nil {
		return x.PatchVersion
	}
	return ""
}

type GetSpellAssetUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetSpellAssetUrlResponse) Reset() {
	*x = GetSpellAssetUrlResponse{}
	mi := &file_assets_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpellAssetUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpellAssetUrlResponse) ProtoMessage() {}

func (x *GetSpellAssetUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assets_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpellAssetUrlResponse.ProtoReflect.Descriptor instead.
func (*GetSpellAssetUrlResponse) Descriptor() ([]byte, []int) {
	return file_assets_proto_rawDescGZIP(), []int{7}
}

func (x *GetSpellAssetUrlResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetChampionAbilityAssetUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChampionName  string `protobuf:"bytes,1,opt,name=championName,proto3" json:"championName,omitempty"`
	AbilityNumber int32  `protobuf:"varint,2,opt,name=abilityNumber,proto3" json:"abilityNumber,omitempty"`
	PatchVersion  string `protobuf:"bytes,3,opt,name=patchVersion,proto3" json:"patchVersion,omitempty"`
}

func (x *GetChampionAbilityAssetUrlRequest) Reset() {
	*x = GetChampionAbilityAssetUrlRequest{}
	mi := &file_assets_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChampionAbilityAssetUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChampionAbilityAssetUrlRequest) ProtoMessage() {}

func (x *GetChampionAbilityAssetUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assets_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChampionAbilityAssetUrlRequest.ProtoReflect.Descriptor instead.
func (*GetChampionAbilityAssetUrlRequest) Descriptor() ([]byte, []int) {
	return file_assets_proto_rawDescGZIP(), []int{8}
}

func (x *GetChampionAbilityAssetUrlRequest) GetChampionName() string {
	if x != nil {
		return x.ChampionName
	}
	return ""
}

func (x *GetChampionAbilityAssetUrlRequest) GetAbilityNumber() int32 {
	if x != nil {
		return x.AbilityNumber
	}
	return 0
}

func (x *GetChampionAbilityAssetUrlRequest) GetPatchVersion() string {
	if x != nil {
		return x.PatchVersion
	}
	return ""
}

type GetChampionAbilityAssetUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetChampionAbilityAssetUrlResponse) Reset() {
	*x = GetChampionAbilityAssetUrlResponse{}
	mi := &file_assets_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChampionAbilityAssetUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChampionAbilityAssetUrlResponse) ProtoMessage() {}

func (x *GetChampionAbilityAssetUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assets_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChampionAbilityAssetUrlResponse.ProtoReflect.Descriptor instead.
func (*GetChampionAbilityAssetUrlResponse) Descriptor() ([]byte, []int) {
	return file_assets_proto_rawDescGZIP(), []int{9}
}

func (x *GetChampionAbilityAssetUrlResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetChampionPassiveAssetUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChampionName string `protobuf:"bytes,1,opt,name=championName,proto3" json:"championName,omitempty"`
	PatchVersion string `protobuf:"bytes,2,opt,name=patchVersion,proto3" json:"patchVersion,omitempty"`
}

func (x *GetChampionPassiveAssetUrlRequest) Reset() {
	*x = GetChampionPassiveAssetUrlRequest{}
	mi := &file_assets_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChampionPassiveAssetUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChampionPassiveAssetUrlRequest) ProtoMessage() {}

func (x *GetChampionPassiveAssetUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assets_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChampionPassiveAssetUrlRequest.ProtoReflect.Descriptor instead.
func (*GetChampionPassiveAssetUrlRequest) Descriptor() ([]byte, []int) {
	return file_assets_proto_rawDescGZIP(), []int{10}
}

func (x *GetChampionPassiveAssetUrlRequest) GetChampionName() string {
	if x != nil {
		return x.ChampionName
	}
	return ""
}

func (x *GetChampionPassiveAssetUrlRequest) GetPatchVersion() string {
	if x != nil {
		return x.PatchVersion
	}
	return ""
}

type GetChampionPassiveAssetUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetChampionPassiveAssetUrlResponse) Reset() {
	*x = GetChampionPassiveAssetUrlResponse{}
	mi := &file_assets_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChampionPassiveAssetUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChampionPassiveAssetUrlResponse) ProtoMessage() {}

func (x *GetChampionPassiveAssetUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assets_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChampionPassiveAssetUrlResponse.ProtoReflect.Descriptor instead.
func (*GetChampionPassiveAssetUrlResponse) Descriptor() ([]byte, []int) {
	return file_assets_proto_rawDescGZIP(), []int{11}
}

func (x *GetChampionPassiveAssetUrlResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetChampionSquareAssetUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChampionName string `protobuf:"bytes,1,opt,name=championName,proto3" json:"championName,omitempty"`
	PatchVersion string `protobuf:"bytes,2,opt,name=patchVersion,proto3" json:"patchVersion,omitempty"`
}

func (x *GetChampionSquareAssetUrlRequest) Reset() {
	*x = GetChampionSquareAssetUrlRequest{}
	mi := &file_assets_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChampionSquareAssetUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChampionSquareAssetUrlRequest) ProtoMessage() {}

func (x *GetChampionSquareAssetUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assets_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChampionSquareAssetUrlRequest.ProtoReflect.Descriptor instead.
func (*GetChampionSquareAssetUrlRequest) Descriptor() ([]byte, []int) {
	return file_assets_proto_rawDescGZIP(), []int{12}
}

func (x *GetChampionSquareAssetUrlRequest) GetChampionName() string {
	if x != nil {
		return x.ChampionName
	}
	return ""
}

func (x *GetChampionSquareAssetUrlRequest) GetPatchVersion() string {
	if x != nil {
		return x.PatchVersion
	}
	return ""
}

type GetChampionSquareAssetUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetChampionSquareAssetUrlResponse) Reset() {
	*x = GetChampionSquareAssetUrlResponse{}
	mi := &file_assets_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChampionSquareAssetUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChampionSquareAssetUrlResponse) ProtoMessage() {}

func (x *GetChampionSquareAssetUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assets_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChampionSquareAssetUrlResponse.ProtoReflect.Descriptor instead.
func (*GetChampionSquareAssetUrlResponse) Descriptor() ([]byte, []int) {
	return file_assets_proto_rawDescGZIP(), []int{13}
}

func (x *GetChampionSquareAssetUrlResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetChampionLoadingScreenAssetUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChampionName string `protobuf:"bytes,1,opt,name=championName,proto3" json:"championName,omitempty"`
	SkinNumber   int32  `protobuf:"varint,2,opt,name=skinNumber,proto3" json:"skinNumber,omitempty"`
}

func (x *GetChampionLoadingScreenAssetUrlRequest) Reset() {
	*x = GetChampionLoadingScreenAssetUrlRequest{}
	mi := &file_assets_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChampionLoadingScreenAssetUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChampionLoadingScreenAssetUrlRequest) ProtoMessage() {}

func (x *GetChampionLoadingScreenAssetUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assets_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChampionLoadingScreenAssetUrlRequest.ProtoReflect.Descriptor instead.
func (*GetChampionLoadingScreenAssetUrlRequest) Descriptor() ([]byte, []int) {
	return file_assets_proto_rawDescGZIP(), []int{14}
}

func (x *GetChampionLoadingScreenAssetUrlRequest) GetChampionName() string {
	if x != nil {
		return x.ChampionName
	}
	return ""
}

func (x *GetChampionLoadingScreenAssetUrlRequest) GetSkinNumber() int32 {
	if x != nil {
		return x.SkinNumber
	}
	return 0
}

type GetChampionLoadingScreenAssetUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetChampionLoadingScreenAssetUrlResponse) Reset() {
	*x = GetChampionLoadingScreenAssetUrlResponse{}
	mi := &file_assets_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChampionLoadingScreenAssetUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChampionLoadingScreenAssetUrlResponse) ProtoMessage() {}

func (x *GetChampionLoadingScreenAssetUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assets_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChampionLoadingScreenAssetUrlResponse.ProtoReflect.Descriptor instead.
func (*GetChampionLoadingScreenAssetUrlResponse) Descriptor() ([]byte, []int) {
	return file_assets_proto_rawDescGZIP(), []int{15}
}

func (x *GetChampionLoadingScreenAssetUrlResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetChampionSplashAssetUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChampionName string `protobuf:"bytes,1,opt,name=championName,proto3" json:"championName,omitempty"`
	SkinNumber   int32  `protobuf:"varint,2,opt,name=skinNumber,proto3" json:"skinNumber,omitempty"`
}

func (x *GetChampionSplashAssetUrlRequest) Reset() {
	*x = GetChampionSplashAssetUrlRequest{}
	mi := &file_assets_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChampionSplashAssetUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChampionSplashAssetUrlRequest) ProtoMessage() {}

func (x *GetChampionSplashAssetUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assets_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChampionSplashAssetUrlRequest.ProtoReflect.Descriptor instead.
func (*GetChampionSplashAssetUrlRequest) Descriptor() ([]byte, []int) {
	return file_assets_proto_rawDescGZIP(), []int{16}
}

func (x *GetChampionSplashAssetUrlRequest) GetChampionName() string {
	if x != nil {
		return x.ChampionName
	}
	return ""
}

func (x *GetChampionSplashAssetUrlRequest) GetSkinNumber() int32 {
	if x != nil {
		return x.SkinNumber
	}
	return 0
}

type GetChampionSplashAssetUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetChampionSplashAssetUrlResponse) Reset() {
	*x = GetChampionSplashAssetUrlResponse{}
	mi := &file_assets_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChampionSplashAssetUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChampionSplashAssetUrlResponse) ProtoMessage() {}

func (x *GetChampionSplashAssetUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assets_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChampionSplashAssetUrlResponse.ProtoReflect.Descriptor instead.
func (*GetChampionSplashAssetUrlResponse) Descriptor() ([]byte, []int) {
	return file_assets_proto_rawDescGZIP(), []int{17}
}

func (x *GetChampionSplashAssetUrlResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_assets_proto protoreflect.FileDescriptor

var file_assets_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x1a, 0x0f, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x75,
	0x6e, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x61, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x22, 0x27, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x75,
	0x6e, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0x69, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x53,
	0x70, 0x65, 0x6c, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x61, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x30, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x49,
	0x63, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x58, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0x5b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6c, 0x6c,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x61, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x2c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22,
	0x91, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x41,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61,
	0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x61, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x6b, 0x0a, 0x21, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76,
	0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0x6a, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53,
	0x71, 0x75, 0x61, 0x72, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6d,
	0x70, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x21,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53, 0x71, 0x75, 0x61, 0x72,
	0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0x6d, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0x3c, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0x66, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53,
	0x70, 0x6c, 0x61, 0x73, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6d,
	0x70, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x6e,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6b,
	0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x32,
	0xcd, 0x07, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x65, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x1a, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e,
	0x65, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x65, 0x49, 0x63, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x49,
	0x63, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x49, 0x63, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x53, 0x70, 0x65,
	0x6c, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x54, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x55, 0x72, 0x6c, 0x12, 0x1e, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65,
	0x6c, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x2e, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x75, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x41, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x29, 0x2e,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x41, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x55, 0x72, 0x6c, 0x12, 0x29, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d,
	0x70, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53, 0x71, 0x75, 0x61,
	0x72, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x2e, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53,
	0x71, 0x75, 0x61, 0x72, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x87, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x2f, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x6c, 0x61, 0x73, 0x68,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x6c,
	0x61, 0x73, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x1d, 0x5a, 0x1b, 0x6d, 0x61, 0x78, 0x69, 0x73, 0x63, 0x68, 0x6d, 0x61, 0x78, 0x69, 0x2f, 0x6a,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_assets_proto_rawDescOnce sync.Once
	file_assets_proto_rawDescData = file_assets_proto_rawDesc
)

func file_assets_proto_rawDescGZIP() []byte {
	file_assets_proto_rawDescOnce.Do(func() {
		file_assets_proto_rawDescData = protoimpl.X.CompressGZIP(file_assets_proto_rawDescData)
	})
	return file_assets_proto_rawDescData
}

var file_assets_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_assets_proto_goTypes = []any{
	(*GetRuneIconRequest)(nil),                       // 0: assets.GetRuneIconRequest
	(*GetRuneIconResponse)(nil),                      // 1: assets.GetRuneIconResponse
	(*GetSummonerSpellIconRequest)(nil),              // 2: assets.GetSummonerSpellIconRequest
	(*GetSummonerSpellIconResponse)(nil),             // 3: assets.GetSummonerSpellIconResponse
	(*GetItemAssetUrlRequest)(nil),                   // 4: assets.GetItemAssetUrlRequest
	(*GetItemAssetUrlResponse)(nil),                  // 5: assets.GetItemAssetUrlResponse
	(*GetSpellAssetUrlRequest)(nil),                  // 6: assets.GetSpellAssetUrlRequest
	(*GetSpellAssetUrlResponse)(nil),                 // 7: assets.GetSpellAssetUrlResponse
	(*GetChampionAbilityAssetUrlRequest)(nil),        // 8: assets.GetChampionAbilityAssetUrlRequest
	(*GetChampionAbilityAssetUrlResponse)(nil),       // 9: assets.GetChampionAbilityAssetUrlResponse
	(*GetChampionPassiveAssetUrlRequest)(nil),        // 10: assets.GetChampionPassiveAssetUrlRequest
	(*GetChampionPassiveAssetUrlResponse)(nil),       // 11: assets.GetChampionPassiveAssetUrlResponse
	(*GetChampionSquareAssetUrlRequest)(nil),         // 12: assets.GetChampionSquareAssetUrlRequest
	(*GetChampionSquareAssetUrlResponse)(nil),        // 13: assets.GetChampionSquareAssetUrlResponse
	(*GetChampionLoadingScreenAssetUrlRequest)(nil),  // 14: assets.GetChampionLoadingScreenAssetUrlRequest
	(*GetChampionLoadingScreenAssetUrlResponse)(nil), // 15: assets.GetChampionLoadingScreenAssetUrlResponse
	(*GetChampionSplashAssetUrlRequest)(nil),         // 16: assets.GetChampionSplashAssetUrlRequest
	(*GetChampionSplashAssetUrlResponse)(nil),        // 17: assets.GetChampionSplashAssetUrlResponse
	(*Image)(nil), // 18: champions.Image
}
var file_assets_proto_depIdxs = []int32{
	18, // 0: assets.GetSummonerSpellIconRequest.image:type_name -> champions.Image
	0,  // 1: assets.AssetsService.GetRuneIcon:input_type -> assets.GetRuneIconRequest
	2,  // 2: assets.AssetsService.GetSummonerSpellIcon:input_type -> assets.GetSummonerSpellIconRequest
	4,  // 3: assets.AssetsService.GetItemAssetUrl:input_type -> assets.GetItemAssetUrlRequest
	6,  // 4: assets.AssetsService.GetSpellAssetUrl:input_type -> assets.GetSpellAssetUrlRequest
	8,  // 5: assets.AssetsService.GetChampionAbilityAssetUrl:input_type -> assets.GetChampionAbilityAssetUrlRequest
	10, // 6: assets.AssetsService.GetChampionPassiveAssetUrl:input_type -> assets.GetChampionPassiveAssetUrlRequest
	12, // 7: assets.AssetsService.GetChampionSquareAssetUrl:input_type -> assets.GetChampionSquareAssetUrlRequest
	14, // 8: assets.AssetsService.GetChampionLoadingScreenAssetUrl:input_type -> assets.GetChampionLoadingScreenAssetUrlRequest
	16, // 9: assets.AssetsService.GetChampionSplashAssetUrl:input_type -> assets.GetChampionSplashAssetUrlRequest
	1,  // 10: assets.AssetsService.GetRuneIcon:output_type -> assets.GetRuneIconResponse
	3,  // 11: assets.AssetsService.GetSummonerSpellIcon:output_type -> assets.GetSummonerSpellIconResponse
	5,  // 12: assets.AssetsService.GetItemAssetUrl:output_type -> assets.GetItemAssetUrlResponse
	7,  // 13: assets.AssetsService.GetSpellAssetUrl:output_type -> assets.GetSpellAssetUrlResponse
	9,  // 14: assets.AssetsService.GetChampionAbilityAssetUrl:output_type -> assets.GetChampionAbilityAssetUrlResponse
	11, // 15: assets.AssetsService.GetChampionPassiveAssetUrl:output_type -> assets.GetChampionPassiveAssetUrlResponse
	13, // 16: assets.AssetsService.GetChampionSquareAssetUrl:output_type -> assets.GetChampionSquareAssetUrlResponse
	15, // 17: assets.AssetsService.GetChampionLoadingScreenAssetUrl:output_type -> assets.GetChampionLoadingScreenAssetUrlResponse
	17, // 18: assets.AssetsService.GetChampionSplashAssetUrl:output_type -> assets.GetChampionSplashAssetUrlResponse
	10, // [10:19] is the sub-list for method output_type
	1,  // [1:10] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_assets_proto_init() }
func file_assets_proto_init() {
	if File_assets_proto != nil {
		return
	}
	file_champions_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_assets_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_assets_proto_goTypes,
		DependencyIndexes: file_assets_proto_depIdxs,
		MessageInfos:      file_assets_proto_msgTypes,
	}.Build()
	File_assets_proto = out.File
	file_assets_proto_rawDesc = nil
	file_assets_proto_goTypes = nil
	file_assets_proto_depIdxs = nil
}
