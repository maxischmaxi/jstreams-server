// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: entries/v1/entries.proto

package entriesv1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "maxischmaxi/jstreams-server/gen/entries/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// EntriesServiceName is the fully-qualified name of the EntriesService service.
	EntriesServiceName = "entries.EntriesService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// EntriesServiceGetEntriesBySummonerProcedure is the fully-qualified name of the EntriesService's
	// GetEntriesBySummoner RPC.
	EntriesServiceGetEntriesBySummonerProcedure = "/entries.EntriesService/GetEntriesBySummoner"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	entriesServiceServiceDescriptor                    = v1.File_entries_v1_entries_proto.Services().ByName("EntriesService")
	entriesServiceGetEntriesBySummonerMethodDescriptor = entriesServiceServiceDescriptor.Methods().ByName("GetEntriesBySummoner")
)

// EntriesServiceClient is a client for the entries.EntriesService service.
type EntriesServiceClient interface {
	GetEntriesBySummoner(context.Context, *connect.Request[v1.GetEntriesBySummonerRequest]) (*connect.Response[v1.GetEntriesBySummonerResponse], error)
}

// NewEntriesServiceClient constructs a client for the entries.EntriesService service. By default,
// it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and
// sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC()
// or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewEntriesServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) EntriesServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &entriesServiceClient{
		getEntriesBySummoner: connect.NewClient[v1.GetEntriesBySummonerRequest, v1.GetEntriesBySummonerResponse](
			httpClient,
			baseURL+EntriesServiceGetEntriesBySummonerProcedure,
			connect.WithSchema(entriesServiceGetEntriesBySummonerMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// entriesServiceClient implements EntriesServiceClient.
type entriesServiceClient struct {
	getEntriesBySummoner *connect.Client[v1.GetEntriesBySummonerRequest, v1.GetEntriesBySummonerResponse]
}

// GetEntriesBySummoner calls entries.EntriesService.GetEntriesBySummoner.
func (c *entriesServiceClient) GetEntriesBySummoner(ctx context.Context, req *connect.Request[v1.GetEntriesBySummonerRequest]) (*connect.Response[v1.GetEntriesBySummonerResponse], error) {
	return c.getEntriesBySummoner.CallUnary(ctx, req)
}

// EntriesServiceHandler is an implementation of the entries.EntriesService service.
type EntriesServiceHandler interface {
	GetEntriesBySummoner(context.Context, *connect.Request[v1.GetEntriesBySummonerRequest]) (*connect.Response[v1.GetEntriesBySummonerResponse], error)
}

// NewEntriesServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewEntriesServiceHandler(svc EntriesServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	entriesServiceGetEntriesBySummonerHandler := connect.NewUnaryHandler(
		EntriesServiceGetEntriesBySummonerProcedure,
		svc.GetEntriesBySummoner,
		connect.WithSchema(entriesServiceGetEntriesBySummonerMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/entries.EntriesService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case EntriesServiceGetEntriesBySummonerProcedure:
			entriesServiceGetEntriesBySummonerHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedEntriesServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedEntriesServiceHandler struct{}

func (UnimplementedEntriesServiceHandler) GetEntriesBySummoner(context.Context, *connect.Request[v1.GetEntriesBySummonerRequest]) (*connect.Response[v1.GetEntriesBySummonerResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("entries.EntriesService.GetEntriesBySummoner is not implemented"))
}
